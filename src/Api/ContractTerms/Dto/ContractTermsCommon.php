<?php

namespace Taler\Api\ContractTerms\Dto;

use Taler\Api\Dto\Timestamp;
use Taler\Api\Dto\RelativeTime;
use Taler\Api\Order\Dto\Merchant;
use Taler\Api\Order\Dto\Exchange;
use Taler\Api\Inventory\Dto\Product;
use Taler\Api\Dto\Location;

/**
 * DTO for contract terms common data
 * 
 * @see https://docs.taler.net/core/api-common.html
 */
class ContractTermsCommon
{
    /**
     * @param string $summary Human-readable description of the whole purchase
     * @param string $order_id Unique, free-form identifier for the proposal
     * @param array<int, Product> $products List of products that are part of the purchase
     * @param Timestamp $timestamp Time when this contract was generated
     * @param Timestamp $refund_deadline After this deadline has passed, no refunds will be accepted
     * @param Timestamp $pay_deadline After this deadline, the merchant won't accept payments for the contract
     * @param Timestamp $wire_transfer_deadline Transfer deadline for the exchange
     * @param string $merchant_pub Merchant's public key used to sign this proposal
     * @param string $merchant_base_url Base URL of the (public!) merchant backend API
     * @param Merchant $merchant More info about the merchant
     * @param string $h_wire The hash of the merchant instance's wire details
     * @param string $wire_method Wire transfer method identifier for the wire method associated with h_wire
     * @param array<int, Exchange> $exchanges Exchanges that the merchant accepts
     * @param string $nonce Nonce generated by the wallet and echoed by the merchant
     * @param array<string, string>|null $summary_i18n Map from IETF BCP 47 language tags to localized summaries
     * @param string|null $public_reorder_url URL where the same contract could be ordered again
     * @param string|null $fulfillment_url URL that will show that the order was successful after it has been paid for
     * @param string|null $fulfillment_message Message shown to the customer after paying for the order
     * @param array<string, string>|null $fulfillment_message_i18n Map from IETF BCP 47 language tags to localized fulfillment messages
     * @param Location|null $delivery_location Delivery location for (all!) products
     * @param Timestamp|null $delivery_date Time indicating when the order should be delivered
     * @param RelativeTime|null $auto_refund Specifies for how long the wallet should try to get an automatic refund
     * @param object|null $extra Extra data that is only interpreted by the merchant frontend
     * @param int|null $minimum_age Minimum age the buyer must have (in years)
     */
    public function __construct(
        public readonly string $summary,
        public readonly string $order_id,
        public readonly array $products,
        public readonly Timestamp $timestamp,
        public readonly Timestamp $refund_deadline,
        public readonly Timestamp $pay_deadline,
        public readonly Timestamp $wire_transfer_deadline,
        public readonly string $merchant_pub,
        public readonly string $merchant_base_url,
        public readonly Merchant $merchant,
        public readonly string $h_wire,
        public readonly string $wire_method,
        public readonly array $exchanges,
        public readonly string $nonce,
        public readonly ?array $summary_i18n = null,
        public readonly ?string $public_reorder_url = null,
        public readonly ?string $fulfillment_url = null,
        public readonly ?string $fulfillment_message = null,
        public readonly ?array $fulfillment_message_i18n = null,
        public readonly ?Location $delivery_location = null,
        public readonly ?Timestamp $delivery_date = null,
        public readonly ?RelativeTime $auto_refund = null,
        public readonly ?object $extra = null,
        public readonly ?int $minimum_age = null,
    ) {
    }

    /**
     * Creates a new instance from an array of data
     *
     * @param array{
     *     summary: string,
     *     order_id: string,
     *     products: array<int, array{
     *         description: string,
     *         product_id?: string|null,
     *         description_i18n?: array<string, string>|null,
     *         quantity?: int|null,
     *         unit?: string|null,
     *         price?: string|null,
     *         image?: string|null,
     *         taxes?: array<int, array{name: string, tax: string}>|null,
     *         delivery_date?: array{t_s: int|string}|null
     *     }>,
     *     timestamp: array{t_s: int|string},
     *     refund_deadline: array{t_s: int|string},
     *     pay_deadline: array{t_s: int|string},
     *     wire_transfer_deadline: array{t_s: int|string},
     *     merchant_pub: string,
     *     merchant_base_url: string,
     *     merchant: array{
     *         name: string,
     *         email?: string|null,
     *         website?: string|null,
     *         logo?: string|null,
     *         address?: array{
     *             country?: string|null,
     *             town?: string|null,
     *             state?: string|null,
     *             region?: string|null,
     *             province?: string|null,
     *             street?: string|null
     *         }|null,
     *         jurisdiction?: array{
     *             country?: string|null,
     *             town?: string|null,
     *             state?: string|null,
     *             region?: string|null,
     *             province?: string|null,
     *             street?: string|null
     *         }|null
     *     },
     *     h_wire: string,
     *     wire_method: string,
     *     exchanges: array<int, array{
     *         url: string,
     *         priority: int,
     *         master_pub: string,
     *         max_contribution?: string|null
     *     }>,
     *     summary_i18n?: array<string, string>,
     *     public_reorder_url?: string,
     *     fulfillment_url?: string,
     *     fulfillment_message?: string,
     *     fulfillment_message_i18n?: array<string, string>,
     *     delivery_location?: array{
     *         country?: string|null,
     *         town?: string|null,
     *         state?: string|null,
     *         region?: string|null,
     *         province?: string|null,
     *         street?: string|null
     *     },
     *     delivery_date?: array{t_s: int|string},
     *     nonce: string,
     *     auto_refund?: array{d_us: int|string},
     *     extra?: object,
     *     minimum_age?: int
     * } $data
     */
    public static function fromArray(array $data): self
    {
        return new self(
            summary: $data['summary'],
            order_id: $data['order_id'],
            products: array_map(
                fn(array $product) => Product::fromArray($product),
                $data['products']
            ),
            timestamp: Timestamp::fromArray($data['timestamp']),
            refund_deadline: Timestamp::fromArray($data['refund_deadline']),
            pay_deadline: Timestamp::fromArray($data['pay_deadline']),
            wire_transfer_deadline: Timestamp::fromArray($data['wire_transfer_deadline']),
            merchant_pub: $data['merchant_pub'],
            merchant_base_url: $data['merchant_base_url'],
            merchant: Merchant::fromArray($data['merchant']),
            h_wire: $data['h_wire'],
            wire_method: $data['wire_method'],
            exchanges: array_map(
                fn(array $exchange) => Exchange::fromArray($exchange),
                $data['exchanges']
            ),
            nonce: $data['nonce'],
            summary_i18n: $data['summary_i18n'] ?? null,
            public_reorder_url: $data['public_reorder_url'] ?? null,
            fulfillment_url: $data['fulfillment_url'] ?? null,
            fulfillment_message: $data['fulfillment_message'] ?? null,
            fulfillment_message_i18n: $data['fulfillment_message_i18n'] ?? null,
            delivery_location: isset($data['delivery_location']) ? Location::fromArray($data['delivery_location']) : null,
            delivery_date: isset($data['delivery_date']) ? Timestamp::fromArray($data['delivery_date']) : null,
            auto_refund: isset($data['auto_refund']) ? RelativeTime::fromArray($data['auto_refund']) : null,
            extra: $data['extra'] ?? null,
            minimum_age: $data['minimum_age'] ?? null,
        );
    }
} 